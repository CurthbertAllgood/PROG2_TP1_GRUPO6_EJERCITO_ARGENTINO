services:
  db:
    image: mysql:8.0
    container_name: ejercito_db
    environment:
      MYSQL_DATABASE: ejercito_db
      MYSQL_ROOT_PASSWORD: root
      # Si querés usuario app:
      # MYSQL_USER: app
      # MYSQL_PASSWORD: app
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: ejercito_backend
    environment:
      # Spring Boot relaxed binding: puntos→guiones/underscores y mayúsculas
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/ejercito_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      # Tu config JWT (mapea a app.jwt.secret y app.jwt.expiration-ms)
      APP_JWT_SECRET: change-me-super-secret-AT-LEAST-64-CHARS-LONG-0123456789abcdefABCDEF!@#$
      APP_JWT_EXPIRATION_MS: "86400000"
      # Si tenías server.port en properties, lo respetará; si querés forzarlo:
      # SERVER_PORT: 8080
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        # Esto hace que el build de React use /api (lo maneja Nginx)
        REACT_APP_API: /api
    container_name: ejercito_frontend
    depends_on:
      - backend
    ports:
      - "3000:80"

volumes:
  db_data:
